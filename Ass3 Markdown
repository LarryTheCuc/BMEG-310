---
title: "Assignment 3"
author: "Group 16: Alexandra Murphy, Daniel Hinatsu, SJ Patel"
date: "`r Sys.Date()`"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Question 1

Areas of the genome with high GC content are harder to sequence because of their higher stability due to
base stacking or the formation of stronger hydrogen bonds. These regions also have a higher melting points
and form secondary structures, which further impedes the progression of DNA polymerase during PCR.

## Question 2

```{r}

[Daniel's image]

```

## Question 3

```{r Q3., results = 'hide'}

# Q3.1.

read.csv("single_cell_RNA_seq_bam.sam", nrows=73, sep="\t", header=FALSE, fill=TRUE)

# The SN tag indicates the reference sequence name and the LN tag indicates the 
# reference sequence length.
  
# Q3.2.

data <- read.csv("single_cell_RNA_seq_bam.sam", sep="\t", header=FALSE, fill=TRUE)
X.length <- data$V3[data$V2 == "SN:X"]

# The length of the X chromosome is 171031299 bp.

```

## Question 4

```{r}

#q4.1

sam <- read.csv("single_cell_RNA_seq_bam.sam",
                sep="\t", header=FALSE,
comment.char="@", col.names = paste0("V",seq_len(30)), fill=TRUE)
sam <- sam[paste0("V",seq_len(11))]
nrow(sam)

# There are 146346 reads.

#q4.2

row_10 <- sam[10,]
# You should look at column 3 (V3) to find the chromosome to which the read was aligned.
# V11 corresponds to the data field QUAL which is the ASCII of Phred-scaled base QUALity+33.

#q4.3

X <-  subset(sam, V3 == "X")
nrow(X)

# 5999 reads are from chromosome X


#q4.4

[SJ]

#q4.5

[SJ code here]

#q4.6
# Column V4 is the leftmost mapping position
  
#q4.7
Hspa8 <- subset(sam, V4 >= 40801273 & V4 <= 40805199)
nrow(Hspa8)
#134 reads

#q4.8
BadMap <- subset(sam, V5 < 50)
nrow(BadMap)
#61527

#q4.9
mean(BadMap$V5)
#0.24181254

#4.10
[SJ]
```

## Question 5

```{r}
#q5.1

[alex]

#q5.2

[any]

#q5.3

[anyone]

#q5.4

var683ref <- variants$REF[683]
var683alt <- variants$ALT[683]
var683Info <- strsplit(as.character(variants$INFO[683]), ";")[[1]]
var683ANN <- var683Info[grep("ANN=", var683Info)]
var683ANN

var683annotes <- strsplit(var683ANN, ",")[[1]]
var683annotes <- gsub("ANN=", "", var683annotes)
unlist(var683annotes[1])
#affects gene Rps19

#q5.5
HIGHvar <- variants[grep("HIGH", variants$INFO), ]
nrow(HIGHvar)
#4 rows

#q5.6
#frameshifts occur from a deletion or insertion that changes the reading frame 
#typically causing a premature stop. In comparison a missense is just a single 
#amino acid being changed. Frame shifts have a larger influence on the protein as 
#the entire amino acid chain is interpreted as opposed to a single amino-acid 
#in the chain being changed. 

#q.5.7

[Sj or Alex]

#q5.8

[SJ or Daniel code]

#q5.9

[alex words here]

#q5.10
sampleFormat <- strsplit(variants$FORMAT, ":",fixed=TRUE)
sampleGeno <- strsplit(variants$ws20171223_MPs_tomatoMuscle8wkQuiescent201, ":",fixed=TRUE) 

VAF <- c()
for (i in 1:length(sampleGeno)) {
  TEMPformat <- unlist(sampleFormat[i])
  TEMPvalues <- unlist(sampleGeno[i])
  AD <- unlist(strsplit(TEMPvalues[which(TEMPformat=="AD")],","))
  VAF[i] <- as.integer(AD[2]) / sum(as.integer(AD))
}

boxplot(VAF, main = "VAF")
sum(VAF > 0.05)
sum(VAF >0.05 & grepl("protein_coding", variants$INFO))
```

Contributions:
Collabrative:

Alex:
1,3,5.1,5.2,5.3
Daniel: 
2,
4.1,4.2,4.3,4.6,4.7,4.8,4.9
5.10
SJ:
4.4,4.5,4.10

