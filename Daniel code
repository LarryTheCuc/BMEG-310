#importing the data
ovarian.dataset <- read.delim("ovarian.data", sep=",", header = FALSE)
features <- c("perimeter", "area", "smoothness", "symmetry", "concavity", paste("protein", seq(1, 25), sep=""))
names(ovarian.dataset) <- c("cell_id", "diagnosis", features) # paste0(features,"_mean"), paste0(features,"_se"),
paste0(features,"_worst")

#running the first few PCR to see the SD and importance
ovarian.pca <- prcomp(ovarian.dataset[,3:32], center = TRUE,scale. = TRUE)
summary(ovarian.pca)

#installing the graph tools
install.packages("devtools")
library(devtools)
#install.packages("remotes")
remotes::install_github("vqv/ggbiplot")
library(ggbiplot)

#plotting the first 2 relevant PC's (PC9 and PC10)
ggbiplot(ovarian.pca, choices=c(9,10))
ggbiplot(ovarian.pca, labels=row.names(ovarian.dataset))

#categorizing
ggbiplot(ovarian.pca, ellipse = TRUE, labels=rownames(ovarian.dataset), groups=ovarian.dataset$diagnosis)

#normalizing the features (3-32) for clustering
summary(ovarian.dataset)
ovarian_data_norm <- as.data.frame(scale(ovarian.dataset[,3:32]))
summary(ovarian_data_norm)

dist_mat <- dist(ovarian_data_norm, method = 'euclidean')
hclust_avg <-  hclust(dist_mat, method = 'average')

cut_avg <-  cutree(hclust_avg, k=2)

ovarian.dataset_cl <-  mutate(ovarian.dataset, cluster = cut_avg)

#plotting the concavity over area 
ggplot(ovarian.dataset_cl, aes(y=concavity,x=area, color= diagnosis)) + geom_point()

##question 2 kmeans clustering
install.packages("factoextra")
library(factoextra)

#create kmeans clusters 
ovarian_k <- kmeans(ovarian_data_norm, 2, iter.max = 10, nstart=1)
print(ovarian_k)

#visualize clusters
fviz_cluster(ovarian_k, ovarian.dataset[,3:32], ellipse.type = "norm")

#making a function that will take both kclusted labels and the true labels and compare the accuarcy
CompareKLabels <- function(kLabels, TrueLabels){
  #test correspondence of labels 1 and 2 to M or B
  OneAsM <- ifelse(kLabels == 1, "M", kLabels)
  OneAsM <- ifelse(OneAsM == 2, "B", OneAsM)
  
  OneAsB <- ifelse(kLabels == "1", "B", kLabels)
  OneAsB <- ifelse(OneAsB == 2, "M", OneAsB)
  
  SuccessM <- sum(OneAsM == TrueLabels)
  SuccessB <- sum(OneAsB == TrueLabels)
  
  #compare which yields higher accuracy to the labels
  if (SuccessM > SuccessB){
    Accuracy <- SuccessM
    FoundLabels <-  OneAsM
  } else {
    Accuracy <- SuccessB
    FoundLabels <- OneAsB
  }
  
  #return how many matched the real labels
  percentAcc <-  Accuracy / length(kLabels)
  
  tp <- length(which(TrueLabels=="M"))
  tn <- length(which(TrueLabels=="B"))
  fp <- length(which(FoundLabels=="M"))
  fn <- length(which(TrueLabels=="B"))
  
  percision <- (tp) / (tp + fp)
  recall <- (tp) / (tp + fn)
  
  values <- data.frame(percentAcc, percision,recall)
  return(values)
}

result1 <- CompareKLabels(ovarian_k$cluster,ovarian.dataset$diagnosis)
acc1 <-  result1[1,1]
i <- 1
while (i <= 10){
  tempKData <- kmeans(ovarian_data_norm, 2, iter.max = 10, nstart=i)
  CompareKLabels(tempKData$cluster,ovarian.dataset$diagnosis)
  i = i+1
}




#PCA on the data
topPC <- ovarian.pca$x[,1:5]

topPc_K <- kmeans(topPC,2)
PcaKvals <-CompareKLabels(topPc_K$cluster, ovarian.dataset$diagnosis)
#I got the same values lol


#Question 3 
ovarian.dataset.train <- ovarian.dataset[sample(nrow(ovarian.dataset))[1:(nrow(ovarian.dataset)/2)],]
ovarian.dataset.test <- ovarian.dataset[sample(nrow(ovarian.dataset))[(nrow(ovarian.dataset)/2):(nrow(ovarian.dataset))],]
ovarian.dataset.train$diagnosis <- as.factor(ovarian.dataset.train$diagnosis)
ovarian.dataset.test$diagnosis <- as.factor(ovarian.dataset.test$diagnosis)

fitDiag <-  glm(diagnosis~ +. -cell_id, data = ovarian.dataset.train, family = binomial)
summary(fitDiag)

prob <-  predict(fitDiag, ovarian.dataset.test, type = "response")
prob[1:5]



#does not converge

#come back to this
PC_prob <- predict(fitDiag, as.data.frame(topPC), type = "response")

install.packages("ROCR")
library(ROCR)

pred.prob <- predict(fit, ovarian.dataset, type="response")
predict <- prediction(pred.prob, ovarian.dataset$diagnosis, label.ordering=c("B","M"))
perform <- performance(predict,"tpr","fpr")
plot(perform,colorize=TRUE)

#what does nay of this means??????
#really high tp rate, vary levels of false positive rate. the model tend to flag too many cells as positive
#not very precise 

#classifying for area i guess 
fitArea <-  glm(area~ +. -cell_id, data = ovarian.dataset.train, family = binomial)
summary(fitArea)

prob <-  predict(fitDiag, ovarian.dataset.test, type = "response")
prob[1:5]
#does not converge

#come back to this
PC_prob <- predict(fitDiag, as.data.frame(topPC), type = "response")
